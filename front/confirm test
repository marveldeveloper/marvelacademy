import React, { useEffect, useState } from "react";
import ReactDOM from "react-dom";
import { Toaster } from "react-hot-toast";
import { useSelector } from "react-redux";
import { useRoutes } from "react-router-dom";
import { routes } from "./constants";
import { clearCaches, setPrototypes } from "./methods";
import { Loading, Modal } from "./components";

setPrototypes();

export default function App() {
  const confirm = useConfirm();
  const loading = useSelector((s) => s.loading.length !== 0);
  const isLogged = useSelector((s) => s.isLogged);
  const role = useSelector((s) => s.role);
  const elements = useRoutes(routes(isLogged, role));
  useEffect(clearCaches, []);
  return (
    <React.Fragment>
      <Toaster position="top-left" reverseOrder={false} />
      {/* {elements} */}
      <button
        onClick={() => {
          confirm()
            .onOk(() => {
              console.log("on");
            })
            .onCancel(() => {
              console.log("cancel");
            });
        }}
      >
        Click me
      </button>
      {loading && <Loading />}
    </React.Fragment>
  );
}
function useConfirm() {
  return () => {
    const body = document.body;
    const div = document.createElement("div");
    body.appendChild(div);

    ReactDOM.render(<ConfirmModal />, div);
    return ConfirmModal.methods;
  };
}
const ConfirmModal = () => {
  const [show, setShow] = useState(false);
  const [onOk, setOnOk] = useState(() => {});
  const [onCancel, setOnCancel] = useState(() => {});
  const methods = {
    onOk: (callback = () => {}) => {
      setOnOk(() => callback);
      return methods;
    },
    onCancel: (callback = () => {}) => {
      setOnCancel(() => callback);
      return methods;
    },
  };
  ConfirmModal.methods = methods;
  useEffect(() => {
    setShow(true);
  }, []);
  return (
    <Modal show={show} onHide={setShow}>
      <p>test test test</p>
      <button
        onClick={() => {
          setShow(false);
          onOk();
        }}
      >
        ok
      </button>
      <button
        onClick={() => {
          setShow(false);
          onCancel();
        }}
      >
        cancel
      </button>
    </Modal>
  );
};
